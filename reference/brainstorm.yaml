openapi: 3.1.0
info:
  title: brainstorm
  version: '1.0'
  summary: API for the Brainstorm app
  contact:
    name: Alex Petrean
    email: alex.petrean@stud.ubbcluj.ro
  description: Rest API
servers:
  - url: 'http://localhost:5000/api'
  - url: 'http://localhost:5001/api'
    description: ''
paths:
  /AppVersion/version:
    get:
      summary: Get Api Version
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionCode'
      operationId: get-AppVersion-version
      description: Retrieves the version of the app
      security: []
  /Auth/login:
    parameters: []
    post:
      summary: Login User
      operationId: post-auth-login
      responses:
        '200':
          $ref: '#/components/responses/AuthResponse'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Login'
      security: []
      tags:
        - Auth
  /Auth/signup:
    post:
      summary: SignUp user
      operationId: post-auth-signup
      responses:
        '200':
          $ref: '#/components/responses/AuthResponse'
      description: ''
      security: []
      requestBody:
        $ref: '#/components/requestBodies/Signup'
      tags:
        - Auth
    parameters: []
  '/User/{userId}':
    get:
      summary: Get Info about a User
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Gigel:
                  value:
                    id: 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                    firstName: Gigel
                    lastName: Anton
                    email: gigel.anton@gmail.com
                    profilePic: 'https://i.pravatar.cc/150?u=gigel.png'
                Maricica:
                  value:
                    id: 4f740754-574b-11ec-bf63-0242ac130002
                    firstName: Maricica
                    lastName: Pop
                    email: maricica.pop@gmail.com
                    profilePic: 'https://i.pravatar.cc/150?u=maricica.png'
      operationId: get-user
      parameters: []
    put:
      summary: Update User Info
      operationId: put-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - schema:
            type: string
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - User
    parameters:
      - $ref: '#/components/parameters/userId'
  '/Org/{orgId}/users':
    parameters:
      - $ref: '#/components/parameters/orgId'
    get:
      summary: Get Organization Members
      tags:
        - Organization
      responses: {}
      operationId: get-org-orgId-users
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      description: ''
  /Org:
    post:
      summary: Create an Organization
      operationId: post-org
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      tags:
        - Organization
    parameters: []
  '/Org/{orgId}':
    get:
      summary: Get Organization Info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      operationId: get-org
      tags:
        - Organization
    put:
      summary: Update Organization Info
      operationId: put-org
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      tags:
        - Organization
    delete:
      summary: Delete an Organization
      operationId: delete-org
      responses:
        '202':
          description: Accepted
      description: ''
      tags:
        - Organization
    parameters:
      - $ref: '#/components/parameters/orgId'
  '/Org/{orgId}/user/{userId}':
    parameters:
      - $ref: '#/components/parameters/orgId'
      - $ref: '#/components/parameters/userId'
    get:
      summary: See if User is in an Organizaiton
      tags:
        - Organization
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: get-org-rgId-user-userId
    post:
      summary: Add a user to an Organization
      operationId: post-org-orgId-user-userId
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: 'null'
      tags:
        - Organization
    delete:
      summary: Remove an User from an Organization
      operationId: delete-org-orgId-user-userId
      responses:
        '202':
          description: Accepted
      tags:
        - Organization
  '/Org/{orgId}/project':
    parameters:
      - $ref: '#/components/parameters/orgId'
    post:
      summary: Create a Project in an Organization
      operationId: post-org-orgId-project
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      tags:
        - Project
        - Organization
  '/Org/{orgId}/projects':
    parameters:
      - $ref: '#/components/parameters/orgId'
    get:
      summary: Get Organization Projects
      tags:
        - Project
        - Organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectId'
      operationId: get-org-orgId-projects
  '/Org/{orgId}/project/{projectId}':
    parameters:
      - $ref: '#/components/parameters/orgId'
      - $ref: '#/components/parameters/projectId'
    get:
      summary: Check if a Project is in an Organization
      tags:
        - Project
        - Organization
      responses:
        '204':
          description: No Content
      operationId: get-Org-orgId-project-projectId
  '/Project/{projectId}':
    parameters:
      - $ref: '#/components/parameters/projectId'
    get:
      summary: Get Project Info
      tags:
        - Project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              examples:
                FirstGetAllInDetail:
                  value:
                    id: 2ef92afa-5cd6-11ec-bf63-0242ac130002
                    name: FirstExample
                    topics:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        type: simple
                        title: Simple Topic
                        author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                        highlightedProposal: 2ff3e4c8-5744-11ec-bf63-0242ac130002
                        activeUsers:
                          - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                          - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                          - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                          - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                        currentIteration: 4f740628-574b-11ec-bf63-0242ac130002
      operationId: get-org-orgId-project-projectId
    put:
      summary: Update Project Info
      operationId: put-Org-orgId-project-projectId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      requestBody:
        $ref: '#/components/requestBodies/Project'
      tags:
        - Project
    delete:
      summary: Delete a Project
      operationId: delete-Org-orgId-project-projectId
      responses:
        '202':
          description: Accepted
      tags:
        - Project
  '/Project/{projectId}/topics':
    parameters:
      - $ref: '#/components/parameters/projectId'
    get:
      summary: Get Project Topics
      tags:
        - Project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicSummary'
              examples:
                FirstGet:
                  value:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      type: simple
                      title: Simple Topic
                      author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                      highlightedProposal: 2ff3e4c8-5744-11ec-bf63-0242ac130002
                      activeUsers:
                        - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                        - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                        - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                        - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      currentIteration: 4f740628-574b-11ec-bf63-0242ac130002
      operationId: get-Project-projectId-topics
      description: ''
  '/Project/{projectId}/topic':
    parameters:
      - $ref: '#/components/parameters/projectId'
    post:
      summary: Create a Topic in a Project
      operationId: post-Project-projectId-topic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
              examples:
                First:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: simple
                    title: Simple Topic
                    author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                    highlightedProposal: 2ff3e4c8-5744-11ec-bf63-0242ac130002
                    activeUsers:
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                    currentIteration: 4f740628-574b-11ec-bf63-0242ac130002
                    iterations:
                      - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    creationDate: '2019-08-24T14:15:22Z'
      requestBody:
        $ref: '#/components/requestBodies/Topic'
      tags:
        - Project
  '/Topic/{topicId}':
    get:
      summary: Get Topic Info
      tags:
        - Topic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
              examples:
                Simple:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    type: simple
                    title: Simple Topic
                    author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                    highlightedProposal: 2ff3e4c8-5744-11ec-bf63-0242ac130002
                    activeUsers:
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                    currentIteration: 4f740628-574b-11ec-bf63-0242ac130002
                    iterations:
                      - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    creationDate: '2019-08-24T14:15:22Z'
                Complex:
                  value:
                    id: c80af5c7-eb9c-4f3e-b9d9-873d8290ffb5
                    type: complex
                    title: Complex Topic
                    author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                    highlightedProposal: 4f740326-574b-11ec-bf63-0242ac130002
                    activeUsers:
                      - 4f740754-574b-11ec-bf63-0242ac130002
                      - 4f740754-574b-11ec-bf63-0242ac130002
                      - 4f740754-574b-11ec-bf63-0242ac130002
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                      - 01143f01-7b4a-4aad-8e87-6de87e34d9cc
                    currentIteration: 4f740628-574b-11ec-bf63-0242ac130002
                    iterations:
                      - 4f740628-574b-11ec-bf63-0242ac130002
                    creationDate: '2019-08-24T14:15:22Z'
      operationId: get-Topic-topicId
    parameters:
      - $ref: '#/components/parameters/topicId'
  '/Topic/{topicId}/iterations':
    parameters:
      - schema:
          type: string
        name: topicId
        in: path
        required: true
    get:
      summary: Get Detailed Iterations Info
      tags: []
      operationId: get-Topic-topicId-iterations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Iteration'
              examples:
                TopicIterations:
                  value:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      position: 3
                      open: true
                      goal: string
                      description: I need a good description!!
                      files:
                        - string
                      comments:
                        lastActiveUsers:
                          - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        commentsAmount: 0
                        lastCommentDate: '2019-08-24T14:15:22Z'
                      deadline: '2019-08-24T14:15:22Z'
                      timeline:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          description: string
                          author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                          creationDate: '2019-08-24T14:15:22Z'
                          files:
                            - string
                          comments:
                            lastActiveUsers:
                              - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            commentsAmount: 0
                            lastCommentDate: '2019-08-24T14:15:22Z'
                          rating:
                            '1': 0
                            '2': 0
                            '3': 0
                            '4': 0
                            '5': 0
                            yourVote:
                              - 1
                            average: 0
      description: ''
    post:
      summary: Create an Iteration
      operationId: post-Topic-topicId-iterations
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iteration'
            examples:
              example-1:
                value:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  position: 3
                  open: true
                  goal: string
                  description: string
                  files:
                    - string
                  comments:
                    lastActiveUsers:
                      - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    commentsAmount: 0
                    lastCommentDate: '2019-08-24T14:15:22Z'
                  deadline: '2019-08-24T14:15:22Z'
                  timeline:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      description: string
                      author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                      creationDate: '2019-08-24T14:15:22Z'
                      files:
                        - string
                      comments:
                        lastActiveUsers:
                          - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        commentsAmount: 0
                        lastCommentDate: '2019-08-24T14:15:22Z'
                      rating:
                        '1': 0
                        '2': 0
                        '3': 0
                        '4': 0
                        '5': 0
                        yourVote:
                          - 1
                        average: 0
  '/Iteration/{iterationId}':
    parameters:
      - schema:
          type: string
        name: iterationId
        in: path
        required: true
    get:
      summary: Get info about an Iteration
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
              examples:
                TopicIteration:
                  value:
                    id: 4f740628-574b-11ec-bf63-0242ac130002
                    position: 3
                    open: true
                    goal: Goal
                    description: Idea description
                    files:
                      - string
                    comments:
                      lastActiveUsers:
                        - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      commentsAmount: 0
                      lastCommentDate: '2019-08-24T14:15:22Z'
                    deadline: '2019-08-29T14:15:22Z'
                    timeline:
                      - id: 2ff3e4c8-5744-11ec-bf63-0242ac130002
                        description: Lorem ipsum first
                        author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                        creationDate: '2019-08-24T14:15:22Z'
                        files:
                          - string
                        comments:
                          lastActiveUsers:
                            - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          commentsAmount: 0
                          lastCommentDate: '2019-08-24T14:15:22Z'
                        rating:
                          '1': 0
                          '2': 0
                          '3': 0
                          '4': 0
                          '5': 0
                          yourVote:
                            - 1
                          average: 0
            application/xml:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                  position:
                    type: number
                  open:
                    type: boolean
                  goal:
                    type: string
                    minLength: 1
                  description:
                    type: string
                    minLength: 1
                  files:
                    type: array
                    items:
                      required: []
                      properties: {}
                  comments:
                    type: object
                    properties:
                      lastActiveUsers:
                        type: array
                        items:
                          required: []
                          properties: {}
                      commentsAmount:
                        type: number
                      lastCommentDate:
                        type: string
                        minLength: 1
                    required:
                      - lastActiveUsers
                      - commentsAmount
                      - lastCommentDate
                  deadline:
                    type: string
                    minLength: 1
                  timeline:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - description
                        - author
                        - creationDate
                      properties:
                        id:
                          type: string
                          minLength: 1
                        description:
                          type: string
                          minLength: 1
                        author:
                          type: string
                          minLength: 1
                        creationDate:
                          type: string
                          minLength: 1
                        files:
                          type: array
                          items:
                            required: []
                            properties: {}
                        comments:
                          type: object
                          properties:
                            lastActiveUsers:
                              type: array
                              items:
                                required: []
                                properties: {}
                          required:
                            - lastActiveUsers
                        rating:
                          type: object
                          properties:
                            yourVote:
                              type: array
                              items:
                                required: []
                                properties: {}
                          required:
                            - yourVote
                required:
                  - id
                  - position
                  - open
                  - goal
                  - description
                  - files
                  - comments
                  - deadline
                  - timeline
                x-examples:
                  example-1:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    position: 3
                    open: true
                    goal: string
                    description: string
                    files:
                      - string
                    comments:
                      lastActiveUsers:
                        - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      commentsAmount: 0
                      lastCommentDate: '2019-08-24T14:15:22Z'
                    deadline: '2019-08-24T14:15:22Z'
                    timeline:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        description: string
                        author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                        creationDate: '2019-08-24T14:15:22Z'
                        files:
                          - null
                        comments:
                          lastActiveUsers: []
                        rating:
                          yourVote: []
            multipart/form-data:
              schema:
                type: object
                properties: {}
      operationId: get-Iteration-iterationId
    put:
      summary: Update an Iteration
      operationId: put-Iteration-iterationId
      responses:
        '200':
          description: OK
    delete:
      summary: Close an Iteration
      operationId: delete-Iteration-iterationId
      responses:
        '200':
          description: OK
  '/Iteration/{iterationId}/timeline':
    parameters:
      - schema:
          type: string
        name: iterationId
        in: path
        required: true
    get:
      summary: Get Timeline of an Interation
      tags: []
      responses: {}
      operationId: get-Iteration-iterationId-timeline
  '/Iteration/{iterationId}/proposal':
    parameters:
      - schema:
          type: string
        name: iterationId
        in: path
        required: true
    post:
      summary: Create a proposal on an Iteration
      operationId: post-Iteration-iterationId-proposal
      responses:
        '200':
          description: OK
  '/Proposal/{proposalId}':
    parameters:
      - schema:
          type: string
        name: proposalId
        in: path
        required: true
    get:
      summary: Get Proposal
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
              examples:
                SimpleTopicProposal:
                  value:
                    id: 2ff3e4c8-5744-11ec-bf63-0242ac130002
                    description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry''s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.'
                    author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                    creationDate: '2019-08-24T14:15:22Z'
                    files:
                      - 'https://source.unsplash.com/random/800x600'
                    comments:
                      lastActiveUsers:
                        - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      commentsAmount: 0
                      lastCommentDate: '2019-08-24T14:15:22Z'
                    rating:
                      '1': 0
                      '2': 0
                      '3': 0
                      '4': 0
                      '5': 0
                      yourVote:
                        - 1
                      average: 0
                ComplexTopicProposal:
                  value:
                    id: 4f740326-574b-11ec-bf63-0242ac130002
                    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eget commodo leo, in tristique elit. Nulla eleifend lacus a tristique varius. Sed ligula enim, tristique eget posuere quis, blandit eget ex. Nullam a sapien et velit dictum dapibus accumsan ut ligula. Nullam euismod nisl neque, ut euismod risus accumsan eu. Aliquam in quam eleifend, feugiat elit nec, sagittis nibh. Etiam quis tincidunt nulla, at tempus felis.'
                    author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                    creationDate: '2019-08-24T14:15:22Z'
                    files:
                      - 'https://source.unsplash.com/random/800x600'
                    comments:
                      lastActiveUsers:
                        - 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      commentsAmount: 0
                      lastCommentDate: '2019-08-24T14:15:22Z'
                    rating:
                      '1': 0
                      '2': 0
                      '3': 0
                      '4': 0
                      '5': 0
                      yourVote:
                        - 1
                      average: 0
      operationId: get-Proposal-proposalId
    put:
      summary: Update Proposal
      operationId: put-Proposal-proposalId
      responses:
        '200':
          description: OK
    patch:
      summary: Add Third-Party additions to Proposals
      operationId: patch-Proposal-proposalId
      responses:
        '200':
          description: OK
      description: 'Ex: ratings'
  '/Proposal/{proposalId}/comment':
    parameters:
      - schema:
          type: string
        name: proposalId
        in: path
        required: true
    post:
      summary: Create a Comment on a Proposal
      operationId: post-Proposal-proposalId-comment
      responses:
        '200':
          description: OK
  '/Proposal/{proposalId}/comments':
    parameters:
      - schema:
          type: string
        name: proposalId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Proposal-proposalId-comments
  '/Proposal/{proposalId}/comment/{commentId}':
    parameters:
      - schema:
          type: string
        name: proposalId
        in: path
        required: true
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Proposal-proposalId-comment-commentId
    patch:
      summary: Add Third-Party additions to Comments
      operationId: patch-Proposal-proposalId-comment-commentId
      responses:
        '200':
          description: OK
      description: 'Ex: Reactions'
    put:
      summary: Update comment
      operationId: put-Proposal-proposalId-comment-commentId
      responses:
        '200':
          description: OK
  '/Event/{eventId}':
    parameters:
      - schema:
          type: string
        name: eventId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Event-eventId
components:
  schemas:
    VersionCode:
      title: VersionCode
      type: object
      examples:
        - version: '1.5'
      description: The version of the app.
      properties:
        version:
          type: string
          pattern: '[0-9]\.[0-9]'
          readOnly: true
      required:
        - version
      x-internal: false
    UserId:
      type: string
      title: UserId
      format: uuid
      readOnly: true
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          readOnly: true
        profilePic:
          oneOf:
            - type: string
              properties: {}
            - type: 'null'
              properties: {}
      required:
        - id
        - firstName
        - lastName
        - email
        - profilePic
      examples:
        - id: string
          firstName: string
          lastName: string
          email: string
          profilePic: string
    OrgId:
      type: string
      title: OrgId
      format: uuid
      readOnly: true
    Organization:
      title: Organization
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OrgId'
        name:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserId'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectId'
        logo:
          oneOf:
            - type: string
              properties: {}
            - properties: {}
              type: 'null'
      required:
        - id
        - name
        - users
        - projects
    ProjectId:
      type: string
      title: ProjectId
      format: uuid
      readOnly: true
    ProjectSummary:
      title: ProjectSummary
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProjectId'
        name:
          type: string
        topics:
          type: array
          items:
            $ref: '#/components/schemas/TopicSummary'
          readOnly: true
    Project:
      title: Project
      allOf:
        - $ref: '#/components/schemas/ProjectSummary'
        - type: object
    TopicId:
      type: string
      title: TopicId
      format: uuid
      readOnly: true
    TopicSummary:
      title: TopicSummary
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TopicId'
        type:
          type: string
          enum:
            - simple
            - complex
          readOnly: true
        title:
          type: string
        author:
          $ref: '#/components/schemas/UserId'
        highlightedProposal:
          $ref: '#/components/schemas/ProposalId'
        activeUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserId'
        currentIteration:
          $ref: '#/components/schemas/IterationId'
    Topic:
      title: Topic
      allOf:
        - $ref: '#/components/schemas/TopicSummary'
        - type: object
          properties:
            iterations:
              type: array
              items:
                $ref: '#/components/schemas/IterationId'
            creationDate:
              type: string
              format: date-time
    IterationId:
      type: string
      title: IterationId
      format: uuid
      readOnly: true
    Iteration:
      title: Iteration
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IterationId'
        position:
          type: number
          example: 3
        open:
          type: boolean
        goal:
          type: string
        description:
          type: string
        files:
          type: array
          items:
            type: string
        comments:
          $ref: '#/components/schemas/CommentsSummary'
        deadline:
          type: string
          format: date-time
        timeline:
          $ref: '#/components/schemas/Timeline'
    CommentSection:
      title: CommentSection
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProposalId'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        parent:
          oneOf:
            - $ref: '#/components/schemas/ProposalId'
            - $ref: '#/components/schemas/IterationId'
    CommentId:
      type: string
      title: CommentId
      format: uuid
      readOnly: true
    Comment:
      title: Comment
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CommentId'
        author:
          $ref: '#/components/schemas/UserId'
        content:
          type: string
        creationDate:
          type: string
          format: date-time
        rating:
          $ref: '#/components/schemas/Rating'
        replyTo:
          oneOf:
            - $ref: '#/components/schemas/CommentId'
            - type: 'null'
        proposal:
          oneOf:
            - $ref: '#/components/schemas/ProposalId'
            - type: 'null'
    CommentsSummary:
      title: CommentsSummary
      type: object
      properties:
        lastActiveUsers:
          type: array
          maxItems: 5
          uniqueItems: true
          items:
            $ref: '#/components/schemas/UserId'
        commentsAmount:
          type: number
        lastCommentDate:
          type: string
          format: date-time
    Timeline:
      title: Timeline
      description: ''
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/Proposal'
          - $ref: '#/components/schemas/Event'
    ProposalId:
      type: string
      title: ProposalId
      format: uuid
      readOnly: true
    Proposal:
      title: Proposal
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProposalId'
        description:
          type: string
        author:
          $ref: '#/components/schemas/UserId'
        creationDate:
          type: string
          format: date-time
        files:
          type: array
          items:
            type: string
        comments:
          $ref: '#/components/schemas/CommentsSummary'
        rating:
          $ref: '#/components/schemas/Rating'
    EventId:
      type: string
      title: EventId
      format: uuid
      example: cd296f26-16c5-43b4-9f4f-cf30c9f6d6e4
    Event:
      title: Event
      allOf:
        - type: object
          description: dang
          properties:
            id:
              $ref: '#/components/schemas/EventId'
            author:
              oneOf:
                - $ref: '#/components/schemas/UserId'
                - type: 'null'
            type:
              type: string
              enum:
                - description change
                - goal update
                - deadline update
                - comment upgrade
                - proposal accepted
        - oneOf:
            - type: object
              description: yo
              properties:
                type:
                  type: string
                  example: comment upgrade
                comment:
                  $ref: '#/components/schemas/CommentId'
                proposal:
                  $ref: '#/components/schemas/ProposalId'
            - type: object
              description: 'no'
              properties:
                type:
                  type: string
                  example: proposal accepted
                proposal:
                  $ref: '#/components/schemas/ProposalId'
            - type: object
              properties:
                type:
                  type: string
                  example: deadline update
                oldDeadline:
                  type: string
                  format: date-time
                newDeadline:
                  type: string
                  format: date-time
            - type: object
              properties:
                type:
                  type: string
                  example: goal update
                oldGoal:
                  type: string
                newGoal:
                  type: string
            - type: object
              properties:
                type:
                  type: string
                  example: description change
                oldDescription:
                  type: string
                newDescription:
                  type: string
      description: ''
      x-internal: false
    Rating:
      title: Rating
      type: object
      properties:
        '1':
          type: number
          description: Angry Emonji
        '2':
          type: number
          description: Sad Emoji
        '3':
          type: number
          description: Eh emoji
        '4':
          type: number
          description: Happy Emoji
        '5':
          type: number
          description: Love Emoji
        yourVote:
          type: array
          uniqueItems: true
          maxItems: 5
          description: Emojis you have clicked on
          items:
            type: number
            maximum: 5
            minimum: 1
        average:
          type: number
          description: Median average of all ratings
          minimum: 0
          maximum: 5
          format: float
          readOnly: true
  securitySchemes:
    simpleauth:
      type: oauth2
      flows:
        password:
          tokenUrl: /Auth/login
          refreshUrl: ''
          scopes: {}
      description: ''
  requestBodies:
    Signup:
      content:
        application/json:
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              password:
                type: string
            required:
              - firstName
              - lastName
              - email
              - password
          examples: {}
    Login:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
    Organization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
    UserId:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserId'
    Project:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Project'
    Topic:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Topic'
  parameters:
    orgId:
      name: orgId
      in: path
      schema:
        type: string
        format: uuid
      required: true
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    projectId:
      name: projectId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    topicId:
      name: topicId
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    AuthResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
              profilePicture:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
                format: email
              id:
                type: string
                format: uuid
            required:
              - token
              - profilePicture
              - firstName
              - lastName
              - email
              - id
          examples:
            Gheo:
              value:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVzdGlwcm9zdEBob2x5Lnd0ZiIsIkRhdGUiOiIxMi8yLzIwMjEgMTA6Mjk6NTQgQU0iLCJqdGkiOiIzZTY2OWZmOS1jNjBiLTRhNDMtYTcwYS04OGQzOWQwMzhlZWIiLCJleHAiOjE2Mzg1MjczOTQsImlzcyI6ImJyYWluc3Rvcm0taW5jIn0.lsP4_mi2zW3wrUl6Imj_u2L7UCoeBAcREq59o4FPNnY
                profilePicture: 'https://robohash.org/Gheorghe-Avram.png'
                firstName: Gheorghe
                lastName: Avram
                email: estiprost@holy.wtf
                id: dc003e9b-c339-491f-a4b3-ed3bf44836bb
security:
  - simpleauth: []
